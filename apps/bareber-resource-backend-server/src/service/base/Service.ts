/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsBoolean,
  IsOptional,
  ValidateNested,
  IsString,
  MaxLength,
  IsDate,
  IsInt,
  Max,
  IsNumber,
} from "class-validator";

import { AppointmentService } from "../../appointmentService/base/AppointmentService";
import { Type } from "class-transformer";
import { Decimal } from "decimal.js";
import { ServiceStaffType } from "../../serviceStaffType/base/ServiceStaffType";
import { StaffServiceCustom } from "../../staffServiceCustom/base/StaffServiceCustom";

@ObjectType()
class Service {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  activo!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [AppointmentService],
  })
  @ValidateNested()
  @Type(() => AppointmentService)
  @IsOptional()
  appointmentServices?: Array<AppointmentService>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  categoria!: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt!: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  descripcion!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duracionBaseMinutos!: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nombre!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  precioBase!: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => [ServiceStaffType],
  })
  @ValidateNested()
  @Type(() => ServiceStaffType)
  @IsOptional()
  serviceStaffTypes?: Array<ServiceStaffType>;

  @ApiProperty({
    required: false,
    type: () => [StaffServiceCustom],
  })
  @ValidateNested()
  @Type(() => StaffServiceCustom)
  @IsOptional()
  staffServiceCustom?: Array<StaffServiceCustom>;
}

export { Service as Service };
