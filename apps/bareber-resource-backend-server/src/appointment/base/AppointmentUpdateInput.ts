/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppointmentServiceUpdateManyWithoutAppointmentsInput } from "./AppointmentServiceUpdateManyWithoutAppointmentsInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { ClientWhereUniqueInput } from "../../client/base/ClientWhereUniqueInput";
import { NotificationUpdateManyWithoutAppointmentsInput } from "./NotificationUpdateManyWithoutAppointmentsInput";
import { PaymentUpdateManyWithoutAppointmentsInput } from "./PaymentUpdateManyWithoutAppointmentsInput";

@InputType()
class AppointmentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AppointmentServiceUpdateManyWithoutAppointmentsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentServiceUpdateManyWithoutAppointmentsInput)
  @IsOptional()
  @Field(() => AppointmentServiceUpdateManyWithoutAppointmentsInput, {
    nullable: true,
  })
  appointmentServices?: AppointmentServiceUpdateManyWithoutAppointmentsInput;

  @ApiProperty({
    required: false,
    type: () => ClientWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ClientWhereUniqueInput)
  @IsOptional()
  @Field(() => ClientWhereUniqueInput, {
    nullable: true,
  })
  clients?: ClientWhereUniqueInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  estado?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaFin?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaInicio?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notas?: string | null;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutAppointmentsInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutAppointmentsInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutAppointmentsInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutAppointmentsInput;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutAppointmentsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutAppointmentsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutAppointmentsInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutAppointmentsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updatedAt?: Date | null;
}

export { AppointmentUpdateInput as AppointmentUpdateInput };
