/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { AppointmentServiceItemListRelationFilter } from "../../appointmentServiceItem/base/AppointmentServiceItemListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { StaffCustomServiceListRelationFilter } from "../../staffCustomService/base/StaffCustomServiceListRelationFilter";
import { UserRoleListRelationFilter } from "../../userRole/base/UserRoleListRelationFilter";
import { UserStaffTypeListRelationFilter } from "../../userStaffType/base/UserStaffTypeListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  activo?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AppointmentServiceItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AppointmentServiceItemListRelationFilter)
  @IsOptional()
  @Field(() => AppointmentServiceItemListRelationFilter, {
    nullable: true,
  })
  appointmentServices?: AppointmentServiceItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  fechaRegistro?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  nombre?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  passwordHash?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => StaffCustomServiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StaffCustomServiceListRelationFilter)
  @IsOptional()
  @Field(() => StaffCustomServiceListRelationFilter, {
    nullable: true,
  })
  staffCustomServices?: StaffCustomServiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  telefono?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserRoleListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserRoleListRelationFilter)
  @IsOptional()
  @Field(() => UserRoleListRelationFilter, {
    nullable: true,
  })
  userRoles?: UserRoleListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserStaffTypeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserStaffTypeListRelationFilter)
  @IsOptional()
  @Field(() => UserStaffTypeListRelationFilter, {
    nullable: true,
  })
  userStaffTypes?: UserStaffTypeListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
