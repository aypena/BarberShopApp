/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  ValidateNested,
  IsString,
  MaxLength,
  IsDate,
} from "class-validator";
import { AppointmentServiceCreateNestedManyWithoutUsersInput } from "./AppointmentServiceCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { StaffServiceCustomCreateNestedManyWithoutUsersInput } from "./StaffServiceCustomCreateNestedManyWithoutUsersInput";
import { UserRoleCreateNestedManyWithoutUsersInput } from "./UserRoleCreateNestedManyWithoutUsersInput";
import { UserStaffTypeCreateNestedManyWithoutUsersInput } from "./UserStaffTypeCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  activo?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => AppointmentServiceCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AppointmentServiceCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AppointmentServiceCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  appointmentServices?: AppointmentServiceCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  fechaRegistro?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  nombre?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  passwordHash?: string | null;

  @ApiProperty({
    required: false,
    type: () => StaffServiceCustomCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => StaffServiceCustomCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => StaffServiceCustomCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  staffServiceCustom?: StaffServiceCustomCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  telefono?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserRoleCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserRoleCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserRoleCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  userRoles?: UserRoleCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserStaffTypeCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserStaffTypeCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserStaffTypeCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  userStaffTypes?: UserStaffTypeCreateNestedManyWithoutUsersInput;
}

export { UserCreateInput as UserCreateInput };
