/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  StaffServiceCustom as PrismaStaffServiceCustom,
  Service as PrismaService,
  User as PrismaUser,
} from "@prisma/client";

export class StaffServiceCustomServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StaffServiceCustomCountArgs, "select">
  ): Promise<number> {
    return this.prisma.staffServiceCustom.count(args);
  }

  async staffServiceCustoms(
    args: Prisma.StaffServiceCustomFindManyArgs
  ): Promise<PrismaStaffServiceCustom[]> {
    return this.prisma.staffServiceCustom.findMany(args);
  }
  async staffServiceCustom(
    args: Prisma.StaffServiceCustomFindUniqueArgs
  ): Promise<PrismaStaffServiceCustom | null> {
    return this.prisma.staffServiceCustom.findUnique(args);
  }
  async createStaffServiceCustom(
    args: Prisma.StaffServiceCustomCreateArgs
  ): Promise<PrismaStaffServiceCustom> {
    return this.prisma.staffServiceCustom.create(args);
  }
  async updateStaffServiceCustom(
    args: Prisma.StaffServiceCustomUpdateArgs
  ): Promise<PrismaStaffServiceCustom> {
    return this.prisma.staffServiceCustom.update(args);
  }
  async deleteStaffServiceCustom(
    args: Prisma.StaffServiceCustomDeleteArgs
  ): Promise<PrismaStaffServiceCustom> {
    return this.prisma.staffServiceCustom.delete(args);
  }

  async getServices(parentId: string): Promise<PrismaService | null> {
    return this.prisma.staffServiceCustom
      .findUnique({
        where: { id: parentId },
      })
      .services();
  }

  async getUsers(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.staffServiceCustom
      .findUnique({
        where: { id: parentId },
      })
      .users();
  }
}
