/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ServiceStaffLink as PrismaServiceStaffLink,
  ServiceEntity as PrismaServiceEntity,
  StaffType as PrismaStaffType,
} from "@prisma/client";

export class ServiceStaffLinkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ServiceStaffLinkCountArgs, "select">
  ): Promise<number> {
    return this.prisma.serviceStaffLink.count(args);
  }

  async serviceStaffLinks(
    args: Prisma.ServiceStaffLinkFindManyArgs
  ): Promise<PrismaServiceStaffLink[]> {
    return this.prisma.serviceStaffLink.findMany(args);
  }
  async serviceStaffLink(
    args: Prisma.ServiceStaffLinkFindUniqueArgs
  ): Promise<PrismaServiceStaffLink | null> {
    return this.prisma.serviceStaffLink.findUnique(args);
  }
  async createServiceStaffLink(
    args: Prisma.ServiceStaffLinkCreateArgs
  ): Promise<PrismaServiceStaffLink> {
    return this.prisma.serviceStaffLink.create(args);
  }
  async updateServiceStaffLink(
    args: Prisma.ServiceStaffLinkUpdateArgs
  ): Promise<PrismaServiceStaffLink> {
    return this.prisma.serviceStaffLink.update(args);
  }
  async deleteServiceStaffLink(
    args: Prisma.ServiceStaffLinkDeleteArgs
  ): Promise<PrismaServiceStaffLink> {
    return this.prisma.serviceStaffLink.delete(args);
  }

  async getServiceEntity(
    parentId: string
  ): Promise<PrismaServiceEntity | null> {
    return this.prisma.serviceStaffLink
      .findUnique({
        where: { id: parentId },
      })
      .serviceEntity();
  }

  async getStaffType(parentId: string): Promise<PrismaStaffType | null> {
    return this.prisma.serviceStaffLink
      .findUnique({
        where: { id: parentId },
      })
      .staffType();
  }
}
