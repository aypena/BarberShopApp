datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  descripcion String?
  id          String     @id @default(cuid()) @db.Uuid
  nombre      String?    @unique
  userRoles   UserRole[]

  @@map("roles")
}

model User {
  activo              Boolean?
  appointmentServices AppointmentServiceItem[]
  email               String?                  @unique
  fechaRegistro       DateTime?                @map("fecha_registro") @db.Timestamp(6)
  id                  String                   @id @default(cuid()) @db.Uuid
  nombre              String?
  passwordHash        String?                  @map("password_hash")
  staffCustomServices StaffCustomService[]
  telefono            String?
  userRoles           UserRole[]
  userStaffTypes      UserStaffType[]

  @@map("users")
}

model UserRole {
  assignedAt DateTime? @map("assigned_at") @db.Timestamp(6)
  id         String    @id @default(cuid())
  role       Role      @relation(fields: [role_id], references: [id])
  role_id    String
  user       User      @relation(fields: [user_id], references: [id])
  user_id    String

  @@map("user_roles")
}

model StaffType {
  descripcion       String?
  id                String             @id @default(cuid()) @db.Uuid
  nombre            String?            @unique
  serviceStaffLinks ServiceStaffLink[]
  userStaffTypes    UserStaffType[]

  @@map("staff_types")
}

model UserStaffType {
  id            String    @id @default(cuid())
  staffType     StaffType @relation(fields: [staff_type_id], references: [id])
  staff_type_id String
  user          User      @relation(fields: [user_id], references: [id])
  user_id       String

  @@map("user_staff_types")
}

model ServiceEntity {
  activo              Boolean?
  appointmentServices AppointmentServiceItem[]
  categoria           String?
  createdAt           DateTime?                @map("created_at") @db.Timestamp(6)
  descripcion         String?
  duracionBaseMinutos Int?                     @map("duracion_base_minutos")
  id                  String                   @id @default(cuid()) @db.Uuid
  nombre              String?
  precioBase          Decimal?                 @map("precio_base") @db.Decimal(10, 2)
  serviceStaffLinks   ServiceStaffLink[]
  staffCustomServices StaffCustomService[]

  @@map("services")
}

model ServiceStaffLink {
  id            String        @id @default(cuid())
  serviceEntity ServiceEntity @relation(fields: [service_id], references: [id])
  service_id    String
  staffType     StaffType     @relation(fields: [staff_type_id], references: [id])
  staff_type_id String

  @@map("service_staff_types")
}

model StaffCustomService {
  duracionCustomMinutos Int?          @map("duracion_custom_minutos")
  id                    String        @id @default(cuid())
  precioCustom          Decimal?      @map("precio_custom") @db.Decimal(10, 2)
  serviceEntity         ServiceEntity @relation(fields: [service_id], references: [id])
  service_id            String
  updatedAt             DateTime?     @map("updated_at") @db.Timestamp(6)
  user                  User          @relation(fields: [staff_id], references: [id])
  staff_id              String

  @@map("staff_service_custom")
}

model Client {
  appointments  Appointment[]
  datosExtra    Json?          @map("datos_extra")
  email         String?
  fechaRegistro DateTime?      @map("fecha_registro") @db.Timestamp(6)
  id            String         @id @default(cuid()) @db.Uuid
  nombre        String?
  notifications Notification[]
  telefono      String?

  @@map("clients")
}

model Appointment {
  appointmentServices AppointmentServiceItem[]
  client              Client                   @relation(fields: [client_id], references: [id])
  client_id           String
  createdAt           DateTime?                @map("created_at") @db.Timestamp(6)
  estado              String?
  fechaFin            DateTime?                @map("fecha_fin") @db.Timestamp(6)
  fechaInicio         DateTime?                @map("fecha_inicio") @db.Timestamp(6)
  id                  String                   @id @default(cuid()) @db.Uuid
  notas               String?
  notifications       Notification[]
  payments            Payment[]
  updatedAt           DateTime?                @map("updated_at") @db.Timestamp(6)

  @@map("appointments")
}

model AppointmentServiceItem {
  appointment          Appointment   @relation(fields: [appointment_id], references: [id])
  appointment_id       String
  duracionFinalMinutos Int?          @map("duracion_final_minutos")
  estado               String?
  fechaAgregado        DateTime?     @map("fecha_agregado") @db.Timestamp(6)
  id                   String        @id @default(cuid()) @db.Uuid
  notas                String?
  precioFinal          Decimal?      @map("precio_final") @db.Decimal(10, 2)
  serviceEntity        ServiceEntity @relation(fields: [service_id], references: [id])
  service_id           String
  user                 User?         @relation(fields: [staff_id], references: [id])
  staff_id             String?

  @@map("appointment_services")
}

model Payment {
  appointment    Appointment @relation(fields: [appointment_id], references: [id])
  appointment_id String
  createdAt      DateTime?   @map("created_at") @db.Timestamp(6)
  detallePago    Json?       @map("detalle_pago")
  fechaPago      DateTime?   @map("fecha_pago") @db.Timestamp(6)
  id             String      @id @default(cuid()) @db.Uuid
  metodoPago     String?     @map("metodo_pago")
  montoTotal     Decimal?    @map("monto_total") @db.Decimal(10, 2)

  @@map("payments")
}

model Setting {
  descripcion String?
  id          String    @id @default(cuid()) @map("clave")
  tipoDato    String?   @map("tipo_dato")
  updatedAt   DateTime? @map("updated_at") @db.Timestamp(6)
  valor       String?

  @@map("settings")
}

model AuditLog {
  accion        String?
  cambios       Json?
  fecha         DateTime? @db.Timestamp(6)
  id            String    @id @default(cuid()) @db.Uuid
  registroId    String?   @map("registro_id") @db.Uuid
  tablaAfectada String?   @map("tabla_afectada")
  usuarioId     String?   @map("usuario_id") @db.Uuid

  @@map("audit_log")
}

model Notification {
  appointment     Appointment @relation(fields: [appointment_id], references: [id])
  appointment_id  String
  client          Client      @relation(fields: [client_id], references: [id])
  client_id       String
  createdAt       DateTime?   @map("created_at") @db.Timestamp(6)
  estado          String?
  fechaEnvio      DateTime?   @map("fecha_envio") @db.Timestamp(6)
  fechaProgramada DateTime?   @map("fecha_programada") @db.Timestamp(6)
  id              String      @id @default(cuid()) @db.Uuid
  mensaje         String?
  tipo            String?

  @@map("notifications")
}
